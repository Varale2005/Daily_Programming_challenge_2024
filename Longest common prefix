#include <iostream>
#include <vector>
#include <string>

using namespace std;

string longestCommonPrefix(vector<string>& strs) {
    if (strs.empty()) return "";  // If the array is empty, return an empty string.

    // Start with the first string as the initial prefix.
    string prefix = strs[0];

    // Iterate through the rest of the strings.
    for (int i = 1; i < strs.size(); ++i) {
        int j = 0;

        // Compare characters of the current string with the prefix.
        while (j < prefix.size() && j < strs[i].size() && prefix[j] == strs[i][j]) {
            ++j;
        }

        // Trim the prefix to the matched portion.
        prefix = prefix.substr(0, j);

        // If at any point the prefix becomes empty, return an empty string.
        if (prefix.empty()) {
            return "";
        }
    }

    return prefix;  // Return the final common prefix.
}

int main() {
    // Example 1
    vector<string> strs1 = {"flower", "flow", "flight"};
    cout << "Longest Common Prefix: " << longestCommonPrefix(strs1) << endl;  // Output: "fl"

    // Example 2
    vector<string> strs2 = {"dog", "racecar", "car"};
    cout << "Longest Common Prefix: " << longestCommonPrefix(strs2) << endl;  // Output: ""

    return 0;
}
