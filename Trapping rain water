#include <iostream>
#include <vector>
#include <algorithm>  // For std::min and std::max

using namespace std;

int trap(vector<int>& height) {
    if (height.empty() || height.size() < 3)
        return 0;  // No water can be trapped if there are less than 3 bars

    int n = height.size();

    // Arrays to store the maximum heights to the left and right of each bar
    vector<int> left_max(n), right_max(n);

    // Fill left_max array
    left_max[0] = height[0];
    for (int i = 1; i < n; i++) {
        left_max[i] = max(left_max[i - 1], height[i]);
    }

    // Fill right_max array
    right_max[n - 1] = height[n - 1];
    for (int i = n - 2; i >= 0; i--) {
        right_max[i] = max(right_max[i + 1], height[i]);
    }

    // Calculate the total water trapped
    int total_water = 0;
    for (int i = 1; i < n - 1; i++) {
        int water_at_i = min(left_max[i], right_max[i]) - height[i];
        if (water_at_i > 0) {
            total_water += water_at_i;
        }
    }

    return total_water;
}

int main() {
    vector<int> height = {0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1};

    cout << "Total water trapped: " << trap(height) << " units" << endl;

    return 0;
}
